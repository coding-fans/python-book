# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/stable/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import datetime
import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))

now = datetime.datetime.now()


# -- Project information -----------------------------------------------------

project = u'Python语言小册'
copyright = u'%d, <a href="https://fasionchan.com">fasionchan</a>' % (now.year,)
author = u'fasionchan'
site_domain = os.environ.get('SITE_DOMAIN', 'idocs.readthedocs.io')

# The short X.Y version
version = u'1.0'
# The full version, including alpha/beta/rc tags
release = u'1.0'


# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.autodoc',
    "sphinx_sitemap",
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = u'zh_CN'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path .
exclude_patterns = [u'_build', 'Thumbs.db', '.DS_Store', '_fragments', 'opt', '_src']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'


# -- Options for HTML output -------------------------------------------------

html_favicon = '_static/favicon.png'

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'alabaster'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
html_theme_options = {
    'logo': 'logo.jpg',
    #'logo_name': True,
    'description': u'Python语言小册子，涵盖高级用法、推荐类库以及最佳实践等。',

    'font_family': ','.join(map(repr, [
        'Arial',
        'Heiti SC',
        'Microsoft YaHei',
    ])),

    #'fixed_sidebar': True,

    # GitHub
    'github_user': 'fasionchan',
    'github_repo': 'python-book',
    'github_banner': True,
    'github_type': 'star',

    # GratiPay
    #'gratipay_user': 'fasionchan@gmail.com',

    # Google Analytics
    #'analytics_id': 'UA-113160431-1',

    #'show_related': True,
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
html_sidebars = {
    '**': [
        'about.html',
        'searchbox.html',
        'navigation.html',
        'more.html',
        #'sf-namecard-fasionchan.html',
        'wechat-mp-qrcode.html',
        'course-ad2.html',
        #'donate.html',

        #'reward.html',

        #'relations.html',  # needs 'show_related': True theme option to display
    ]
}


# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'PythonBookdoc'


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'Python.tex', u'Python语言小册 Documentation',
     author, 'manual'),
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'python', u'Python语言小册 Documentation',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'Python', u'Python语言小册 Documentation',
     author, 'Python', 'One line description of project.',
     'Miscellaneous'),
]

site_url = 'https://%s/zh_CN/latest/' % (site_domain,)

def setup(app):
    app.add_stylesheet('css/hide-ad.css')
    app.add_stylesheet('css/search-box.css')
